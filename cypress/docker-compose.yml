version: "3.7"
services:
    db:
        image: postgres:11.12
        restart: always
        environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: secret
            PGDATA: /var/lib/postgresql/data
        ports:
            - "5433:5433"
        command: -p 5433

    web:
        build:
            context: ..
            dockerfile: ./cypress/platform.Dockerfile
        image: "platform_image"
        volumes:
            - ../:/code
        command: >
            bash -c "
            sleep 10;
            make static_files_process;
            python3 manage.py collectstatic --noinput;
            python3 manage.py migrate;
            python3 manage.py init_int_test_data;
            python3 manage.py recache_statuses;
            python manage.py runserver 0.0.0.0:8001;
            "
        ports:
            - "8001:8001"
        depends_on:
            - db
            - localstack
        environment:
            - PGPASSWORD=secret
            - VCAP_SERVICES={'aws-s3-bucket':[{'binding_guid':'00000000-0000-0000-0000-000000000000','credentials':{'aws_access_key_id':'key','aws_region':'us-east-1','aws_secret_access_key':'secret','bucket_name':'bucketname','deploy_env':''},'instance_guid':'00000000-0000-0000-0000-000000000000','instance_name':'instance_name','label':'aws-s3-bucket','name':'instance_name','plan':'default','tags':['s3'],'volume_mounts':[]}],'postgres':[{'credentials':{'uri':'postgres://admin:secret@db:5433/accessibility_monitoring_app'},'name':'monitoring-platform-default-db'}]}
            - ALLOWED_HOSTS='* localhost 0.0.0.0 0.0.0.0:8001 web web:8001'
            - SECRET_KEY='123456789'
            - DEBUG=TRUE
            - PORT='8001'
            - INTEGRATION_TEST=TRUE
            - POSTGRES_NAME=postgres
            - POSTGRES_USER=admin
            - POSTGRES_PASSWORD=secret
        healthcheck:
            test: curl --fail http://localhost:8001/healthcheck || exit 1
        stdin_open: true
        tty: true

    report_viewer:
        image: "platform_image"
        volumes:
            - ../:/code
        command: >
            bash -c "
            make static_files_process;
            python3 manage_report_viewer.py collectstatic --noinput;
            waitress-serve --port=8002 report_viewer.wsgi:application;
            "
        ports:
            - "8002:8002"
        depends_on:
            - db
            - localstack
            - web
        environment:
            - PGPASSWORD=secret
            - VCAP_SERVICES={'aws-s3-bucket':[{'binding_guid':'00000000-0000-0000-0000-000000000000','credentials':{'aws_access_key_id':'key','aws_region':'us-east-1','aws_secret_access_key':'secret','bucket_name':'bucketname','deploy_env':''},'instance_guid':'00000000-0000-0000-0000-000000000000','instance_name':'instance_name','label':'aws-s3-bucket','name':'instance_name','plan':'default','tags':['s3'],'volume_mounts':[]}],'postgres':[{'credentials':{'uri':'postgres://admin:secret@db:5433/accessibility_monitoring_app'},'name':'monitoring-platform-default-db'}]}
            - ALLOWED_HOSTS='* localhost 0.0.0.0 0.0.0.0:8002'
            - SECRET_KEY='123456789'
            - DEBUG=TRUE
            - PORT='8002'
            - INTEGRATION_TEST=TRUE

    localstack:
        image: localstack/localstack
        hostname: localstack
        ports:
            - "4567:4566"
            - "4572:4571"
        environment:
            - SERVICES=s3
            - AWS_DEFAULT_REGION=us-east-1
            - HOSTNAME_EXTERNAL=localstack
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"

    e2e:
        image: "cypress/included:10.7.0"
        container_name: cypress
        depends_on:
            web:
                condition: service_healthy
        environment:
            - CYPRESS_baseUrl=http://web:8001
        volumes:
            - ./cypress:/cypress
            - ./cypress.config.js:/cypress.config.js
