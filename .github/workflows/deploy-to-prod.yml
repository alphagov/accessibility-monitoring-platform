name: Deploy to production
on:
  push:
    branches:
      - main
jobs:
  test:
    name: Unit tests
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Unit tests
      run: |
        python3 -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install pipenv
        pipenv install -d
        export VCAP_SERVICES="{'postgres':[{'credentials':{'uri':'postgres://admin:secret@localhost:5432/accessibility_monitoring_app'},'name':'monitoring-platform-default-db'},{'credentials':{'uri':'postgres://admin:secret@localhost:5432/a11ymon'},'name':'a11ymon-postgres'}]}"
        export ALLOWED_HOSTS='localhost 127.0.0.1 0.0.0.0'
        export SECRET_KEY=1234
        export DEBUG=TRUE
        npm i
        python3 -c 'from pulp import *; pulp()'
        python manage.py collectstatic --noinput
        python3 manage.py test ./accessibility_monitoring_platform/apps/websites
        pytest

  int-test:
    needs: test
    name: Integration tests
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Integration tests
      run: |
        python3 -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install pipenv
        pipenv install -d
        export VCAP_SERVICES="{'postgres':[{'credentials':{'uri':'postgres://admin:secret@localhost:5432/accessibility_monitoring_app'},'name':'monitoring-platform-default-db'},{'credentials':{'uri':'postgres://admin:secret@localhost:5432/a11ymon'},'name':'a11ymon-postgres'}]}"
        export ALLOWED_HOSTS='localhost 127.0.0.1 0.0.0.0'
        export SECRET_KEY=1234
        export DEBUG=TRUE
        pipenv lock -r > requirements.txt
        python3 integration_tests/main.py
      env:
        AWS_ACCESS_KEY_ID_S3_STORE: ${{ secrets.AWS_ACCESS_KEY_ID_S3_STORE }}
        AWS_SECRET_ACCESS_KEY_S3_STORE: ${{ secrets.AWS_SECRET_ACCESS_KEY_S3_STORE }}
        AWS_DEFAULT_REGION_S3_STORE: ${{ secrets.AWS_DEFAULT_REGION_S3_STORE }}

  deploy:
    needs: int-test
    name: Deploy to production
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Install python dependencies and create static files
      run: |
        python3 -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install pipenv
        pipenv install -d
        export VCAP_SERVICES="{'postgres':[{'credentials':{'uri':'postgres://admin:secret@localhost:5432/accessibility_monitoring_app'},'name':'monitoring-platform-default-db'},{'credentials':{'uri':'postgres://admin:secret@localhost:5432/a11ymon'},'name':'a11ymon-postgres'}]}"
        export ALLOWED_HOSTS='localhost 127.0.0.1 0.0.0.0'
        export SECRET_KEY=1234
        export DEBUG=TRUE
        npm i
        python3 -c 'from pulp import *; pulp()'
        python manage.py collectstatic --noinput

    - name: Installing cloud foundry
      run: |
        sudo apt-get update
        sudo apt install wget -y
        sudo apt-get install gnupg2 -y
        wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
        echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
        sudo apt-get update
        sudo apt-get install cf7-cli

    - name: Staging
      run: |
        python deploy_feature_to_paas/main.py -b up -s deploy_feature_to_paas/deploy_staging_settings.json -f true
        python3 stack_tests/main.py -s ./stack_tests/smoke_tests_stage_env_settings.json
        python deploy_feature_to_paas/main.py -b down -s deploy_feature_to_paas/deploy_staging_settings.json

    - name: Push to cf
      run: |
        cf login -a ${{ secrets.CF_ENDPOINT }} -u ${{ secrets.CF_USER }} -p '${{ secrets.CF_PASSWORD }}' -o ${{ secrets.CF_ORGANISATION }} -s monitoring-platform-production
        cf push -f manifest-prod.yml

    - name: Smoke tests
      run: |
        python3 stack_tests/main.py -s ./stack_tests/smoke_tests_prod_env_settings.json