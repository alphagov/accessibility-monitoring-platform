name: Deploy to test
on: 
  push:
    branches:
      - main
jobs:
  test:
    name: Unit tests
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Unit tests
      run: |
        python3 -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install pipenv
        pipenv install -d
        export VCAP_SERVICES="{'postgres':[{'credentials': { 'uri': 'postgres://admin:secret@localhost:5432/accessibility_monitoring_app' }},{'credentials': { 'uri': 'postgres://admin:secret@localhost:5432/domain_register' }}]}"
        export ALLOWED_HOSTS='localhost 127.0.0.1 0.0.0.0'
        export SECRET_KEY=1234
        export DEBUG=TRUE
        npm i
        npm install --only=dev
        npm link gulp
        gulp build
        python manage.py collectstatic --noinput
        python3 manage.py test

  deploy:
    needs: test
    name: Deploy to test
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install python dependencies and create static files
      run: |
        python3 -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install pipenv
        pipenv install -d
        pipenv lock -r > requirements.txt
        npm i
        npm install --only=dev
        npm link gulp
        gulp build
        python manage.py collectstatic --noinput

    - name: Installing cloud foundry
      run: |
        sudo apt-get update
        sudo apt install wget -y
        sudo apt-get install gnupg2 -y
        wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
        echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
        sudo apt-get update
        sudo apt-get install cf7-cli

    - name: Push to cf
      run: |
        pwd
        cf login -a ${{ secrets.CF_ENDPOINT }} -u ${{ secrets.CF_USER }} -p '${{ secrets.CF_PASSWORD }}' -o ${{ secrets.CF_ORGANISATION }} -s monitoring-platform-test
        cf push -f manifest-test.yml
