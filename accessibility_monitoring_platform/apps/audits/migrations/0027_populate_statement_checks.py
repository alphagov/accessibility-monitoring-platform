# Generated by Django 4.1.7 on 2023-04-18 13:51

from django.db import migrations

QUESTIONS = [
    {
        "type": "overview",
        "label": "Is there an accessibility page?",
        "success_criteria": "An accessibility page is found on the website",
        "report_text": "No accessibility page or statement was found on the website.",
    },
    {
        "type": "overview",
        "label": "Does the accessibility page include a statement?",
        "success_criteria": "The accessibility page includes some some statement wording.",
        "report_text": "The accessibility page does not include an accessibility statement in the correct format.",
    },
    {
        "type": "website",
        "label": 'Is the page titled "Accessibility statement"?',
        "success_criteria": "The main heading is Accessibility Statement or Accessibility Statement for [x]",
        "report_text": 'The title and main heading of the page should be "Accessibility statement for [name of website]"',
    },
    {
        "type": "website",
        "label": "Is there an accessibility commitment?",
        "success_criteria": "A commitment to make the site accessible is found",
        "report_text": "There is no commitment to make the website accessible, as required in the model accessibility statement.",
    },
    {
        "type": "website",
        "label": "Does the commitment use the correct wording?",
        "success_criteria": "The text is: [Name of organisation] is committed to making its [website(s)/mobile application(s), as appropriate] accessible, in accordance with the Public Sector Bodies (Websites and Mobile Applications) (No. 2) Accessibility Regulations 2018.",
        "report_text": "The wording of the commitment to make the website accessible is incorrect.",
    },
    {
        "type": "website",
        "label": "Is there a scope for the accessibility statement?",
        "success_criteria": "The statement is clear about what it applies to.",
        "report_text": "There is no scope included for the statement.",
    },
    {
        "type": "compliance",
        "label": "Is there a heading for compliance status?",
        "success_criteria": "There is a heading for compliance status",
        "report_text": 'A heading for "Compliance status" was not found',
    },
    {
        "type": "compliance",
        "label": "Is the compliance status heading worded correctly?",
        "success_criteria": 'The heading is "Compliance status"',
        "report_text": 'The heading for "Compliance status" is not worded correctly',
    },
    {
        "type": "compliance",
        "label": "Is 1 of the 3 compliance status options included?",
        "success_criteria": "A compliance status option is included",
        "report_text": "The statement does not include the compliance status, as required in the model accessibility statement.",
    },
    {
        "type": "compliance",
        "label": "Is the compliance status option correct?",
        "success_criteria": "The correct status option has been included",
        "report_text": "The wrong compliance status is included in the statement.",
    },
    {
        "type": "non-accessible",
        "label": "Is there a heading for non-accessible content?",
        "success_criteria": "A heading for non-accessible content is included (if needed)",
        "report_text": 'A heading for "Non-accessible content" was not found.',
    },
    {
        "type": "non-accessible",
        "label": "Is any non-compliant content found in the testing listed?",
        "success_criteria": "Non-compliant content is listed.",
        "report_text": "The non-accessible content is not listed in the statement.",
    },
    {
        "type": "non-accessible",
        "label": "Is non-compliant content correct and complete?",
        "success_criteria": "Non-compliant content is correct and complete.",
        "report_text": "The non-accessible content is not correct or complete.",
    },
    {
        "type": "non-accessible",
        "label": "Is disproportionate burden content listed?",
        "success_criteria": "Disproportionate burden is listed.",
        "report_text": "The content where disproportionate burden is claimed is not listed in the statement.",
    },
    {
        "type": "non-accessible",
        "label": "Is disproportionate burden content correct and complete?",
        "success_criteria": "Disproportionate burden content is correct and complete.",
        "report_text": "The content where disproportionate burden is claimed is not correct or complete.",
    },
    {
        "type": "non-accessible",
        "label": "Is content not within the scope of the regulations listed?",
        "success_criteria": "Content not within the scope of the regulations are listed.",
        "report_text": "Content not within the scope of the regulations is not listed in the statement.",
    },
    {
        "type": "non-accessible",
        "label": "Is content not within the scope of the regulations correct and complete?",
        "success_criteria": "Content not within the scope of the regulations is correct and complete.",
        "report_text": "Content not within the scope of the regulations is not correct or complete.",
    },
    {
        "type": "preparation",
        "label": "Is there a heading for preparation of this accessibility statement?",
        "success_criteria": "There is a heading for preparation of this accessibility statement.",
        "report_text": 'A heading for "Preparation of this accessibility statement" was not found.',
    },
    {
        "type": "preparation",
        "label": "Is there a date for the statement preparation?",
        "success_criteria": "There is a date for statement preparation.",
        "report_text": "A statement preparation date was not included.",
    },
    {
        "type": "preparation",
        "label": "Is there a date for the last review of the statement?",
        "success_criteria": "There is a date for the last statement review.",
        "report_text": "A statement review date was not included.",
    },
    {
        "type": "preparation",
        "label": "Is the statement review or preparation date within the last year?",
        "success_criteria": "The statement has not been reviewed in the last year.",
        "report_text": "The statement has not been reviewed in the last year and is out-of-date.",
    },
    {
        "type": "preparation",
        "label": "Is there information about the method used to prepare the statement?",
        "success_criteria": "The method used to prepare the statement is not included.",
        "report_text": "The statement does not included the method used to prepare the statement.",
    },
    {
        "type": "feedback",
        "label": "Is there a heading for feedback and contact information?",
        "success_criteria": "There is a heading for feedback and contact information.",
        "report_text": 'A heading for "Feedback and contact information" was not found.',
    },
    {
        "type": "feedback",
        "label": "Is the heading for feedback and contact information worded correctly?",
        "success_criteria": 'The heading is "Feedback and contact information"',
        "report_text": 'The heading for "Feedback and contact information" is not worded correctly.',
    },
    {
        "type": "feedback",
        "label": "Is there contact information for the organisation?",
        "success_criteria": "There is an email address or contact form.",
        "report_text": "There is no contact information to report accessibility issues.",
    },
    {
        "type": "enforcement",
        "label": "Is there a heading for enforcement procedure?",
        "success_criteria": "There is a heading for enforcement procedure.",
        "report_text": 'A heading for "Enforcement procedure" is not found.',
    },
    {
        "type": "enforcement",
        "label": "Is the heading for enforcement procedure worded correctly?",
        "success_criteria": 'The heading is "Enforcement procedure".',
        "report_text": 'The heading for "Enforcement procedure" is not worded correctly.',
    },
    {
        "type": "enforcement",
        "label": "If GB: does the content mention EHRC?",
        "success_criteria": "The content mentions EHRC as the enforcement body.",
        "report_text": "The statement should say that EHRC are responsible for enforcing the regulations.",
    },
    {
        "type": "enforcement",
        "label": "If NI: does the content mention ECNI?",
        "success_criteria": "The content mentions ECNI as the enforcement body.",
        "report_text": "The statement should say that ECNI are responsible for enforcing the regulations.",
    },
    {
        "type": "enforcement",
        "label": "If GB: is there a link to EASS?",
        "success_criteria": "There is a line about contacting EASS and this is linked.",
        "report_text": "There should be a link to the EASS website for complaints.",
    },
    {
        "type": "enforcement",
        "label": "If NI: is there a link to ECNI?",
        "success_criteria": "There is a line about contacting ECNI and this is linked.",
        "report_text": "There should be a link to the ECNI website for complaints.",
    },
]

STATEMENT_BASE_TEMPLATE_CONTENT_OLD: str = """As part of the regulations you must publish an accessibility statement.
{{ audit.get_accessibility_statement_state_display }}
{% for issue in audit.report_accessibility_issues %}
* {{ issue }}{% if issue == 'mandatory wording is missing' %}
{{ audit.accessibility_statement_missing_mandatory_wording_notes }}{% endif %}
{% endfor %}
More information about accessibility statements can be found at [https://www.gov.uk/guidance/accessibility-requirements-for-public-sector-websites-and-apps](https://www.gov.uk/guidance/accessibility-requirements-for-public-sector-websites-and-apps).
A sample statement can be found at [https://www.gov.uk/government/publications/sample-accessibility-statement](https://www.gov.uk/government/publications/sample-accessibility-statement)."""
STATEMENT_BASE_TEMPLATE_CONTENT_NEW: str = """As part of the regulations you must publish an accessibility statement.
{% if audit.statement_check_results %}
    {% if audit.website_failed_statement_check_results or audit.compliance_failed_statement_check_results or audit.non_accessible_failed_statement_check_results or audit.preparation_failed_statement_check_results or audit.feedback_failed_statement_check_results or audit.enforcement_failed_statement_check_results or audit.other_failed_statement_check_results %}
An accessibility statement for the website was found but we found the following issues. The issues have been separated by section.
        {% if audit.website_failed_statement_check_results %}
Accessibility statement section:
            {% for statement_check_result in audit.website_failed_statement_check_results %}
* {{ statement_check_result.statement_check.report_text }}
    {{ statement_check_result.report_comment }}
            {% endfor %}
        {% endif %}
        {% if audit.compliance_failed_statement_check_results %}
Compliance status section:
            {% for statement_check_result in audit.compliance_failed_statement_check_results %}
* {{ statement_check_result.statement_check.report_text }}
    {{ statement_check_result.report_comment }}
            {% endfor %}
        {% endif %}
        {% if audit.non_accessible_failed_statement_check_results %}
Non accessible content overview section:
            {% for statement_check_result in audit.non_accessible_failed_statement_check_results %}
* {{ statement_check_result.statement_check.report_text }}
    {{ statement_check_result.report_comment }}
            {% endfor %}
        {% endif %}
        {% if audit.preparation_failed_statement_check_results %}
Preparation of this accessibility statement section:
            {% for statement_check_result in audit.preparation_failed_statement_check_results %}
* {{ statement_check_result.statement_check.report_text }}
    {{ statement_check_result.report_comment }}
            {% endfor %}
        {% endif %}
        {% if audit.feedback_failed_statement_check_results %}
Feedback and contact information section:
            {% for statement_check_result in audit.feedback_failed_statement_check_results %}
* {{ statement_check_result.statement_check.report_text }}
    {{ statement_check_result.report_comment }}
            {% endfor %}
        {% endif %}
        {% if audit.enforcement_failed_statement_check_results %}
Enforcement procedure section:
            {% for statement_check_result in audit.enforcement_failed_statement_check_results %}
* {{ statement_check_result.statement_check.report_text }}
    {{ statement_check_result.report_comment }}
            {% endfor %}
        {% endif %}
        {% if audit.other_failed_statement_check_results %}
Other issues we found:
            {% for statement_check_result in audit.other_failed_statement_check_results %}
* {{ statement_check_result.statement_check.report_text }}
    {{ statement_check_result.report_comment }}
            {% endfor %}
        {% endif %}
    {% elif audit.overview_failed_statement_check_results %}
Issues we found:
        {% for statement_check_result in audit.overview_failed_statement_check_results %}
* {{ statement_check_result.statement_check.report_text }}
    {{ statement_check_result.report_comment }}
        {% endfor %}
    {% else %}
EVERYTHING IS FINE, NOTHING TO SEE HERE, MOVE ALONG.
    {% endif %}
{% else %}
{{ audit.get_accessibility_statement_state_display }}
    {% for issue in audit.report_accessibility_issues %}
* {{ issue }}
        {% if issue == 'mandatory wording is missing' %}
    {{ audit.accessibility_statement_missing_mandatory_wording_notes }}
        {% endif %}
    {% endfor %}
More information about accessibility statements can be found at [https://www.gov.uk/guidance/accessibility-requirements-for-public-sector-websites-and-apps](https://www.gov.uk/guidance/accessibility-requirements-for-public-sector-websites-and-apps).
A sample statement can be found at [https://www.gov.uk/government/publications/sample-accessibility-statement](https://www.gov.uk/government/publications/sample-accessibility-statement).
{% endif %}
"""


def populate_statement_checks(apps, schema_editor):  # pylint: disable=unused-argument
    """Populate statement checks and update base template"""
    # pylint: disable=invalid-name
    StatementCheck = apps.get_model("audits", "StatementCheck")
    for count, question in enumerate(QUESTIONS, start=1):
        StatementCheck.objects.create(
            type=question["type"],
            label=question["label"],
            success_criteria=question["success_criteria"],
            report_text=question["report_text"],
            position=count,
        )
    BaseTemplate = apps.get_model("reports", "BaseTemplate")
    try:
        statement_base_template = BaseTemplate.objects.get(
            name="Your accessibility statement"
        )
        statement_base_template.content = STATEMENT_BASE_TEMPLATE_CONTENT_NEW
        statement_base_template.save()
    except BaseTemplate.DoesNotExist:
        pass


def remove_statement_checks(apps, schema_editor):  # pylint: disable=unused-argument
    """Delete all statement checks undo change to base template"""
    # pylint: disable=invalid-name
    StatementCheck = apps.get_model("audits", "StatementCheck")
    for statement_check in StatementCheck.objects.all():
        statement_check.delete()
    BaseTemplate = apps.get_model("reports", "BaseTemplate")
    statement_base_template = BaseTemplate.objects.get(
        name="Your accessibility statement"
    )
    statement_base_template.content = STATEMENT_BASE_TEMPLATE_CONTENT_OLD
    statement_base_template.save()


class Migration(migrations.Migration):
    dependencies = [
        ("audits", "0026_statementcheck_and_more"),
    ]

    operations = [
        migrations.RunPython(
            populate_statement_checks, reverse_code=remove_statement_checks
        )
    ]
