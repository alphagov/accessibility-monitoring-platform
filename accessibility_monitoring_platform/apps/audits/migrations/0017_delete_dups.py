# Generated by Django 4.1.1 on 2022-10-13 13:15
from django.db import connection, migrations

DUPLICATE_AUDITS: str = """SELECT case_id
  FROM audits_audit
 GROUP BY 1
HAVING COUNT(*) > 1
 ORDER BY 1;"""

DUPLICATE_REPORTS: str = """SELECT case_id
  FROM reports_report
 GROUP BY 1
HAVING COUNT(*) > 1
 ORDER BY 1;"""


def delete_duplicate_audits_and_reports(
    apps, schema_editor
):  # pylint: disable=unused-argument
    Audit = apps.get_model("audits", "Audit")
    Report = apps.get_model("reports", "Report")
    with connection.cursor() as cursor:
        cursor.execute(DUPLICATE_AUDITS)
        for (case_id,) in cursor.fetchall():
            audits = Audit.objects.filter(case_id=case_id)
            for count, audit in enumerate(audits):
                if count > 0:  # Keep first audit
                    audit.page_audit.all().delete()
                    audit.delete()

        cursor.execute(DUPLICATE_REPORTS)
        for (case_id,) in cursor.fetchall():
            reports = Report.objects.filter(case_id=case_id)
            for count, report in enumerate(reports):
                if count > 0:  # Keep first report
                    report.section_set.all().delete()
                    report.delete()


def reverse_code(apps, schema_editor):  # pylint: disable=unused-argument
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("audits", "0016_page_is_form"),
    ]

    operations = [
        migrations.RunPython(
            delete_duplicate_audits_and_reports, reverse_code=reverse_code
        ),
    ]
