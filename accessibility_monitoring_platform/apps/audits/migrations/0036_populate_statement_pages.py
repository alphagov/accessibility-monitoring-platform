# Generated by Django 4.2.4 on 2023-12-01 12:01

from django.db import migrations

from accessibility_monitoring_platform.apps.common.utils import convert_date_to_datetime


def populate_statement_pages(apps, schema_editor):  # pylint: disable=unused-argument
    Audit = apps.get_model("audits", "Audit")
    Page = apps.get_model("audits", "Page")
    StatementPage = apps.get_model("audits", "StatementPage")
    for audit in Audit.objects.all():
        page = Page.objects.filter(audit=audit, page_type="statement").first()
        if page is not None:
            if page.url or audit.accessibility_statement_backup_url:
                statement_page = StatementPage.objects.create(
                    audit=audit,
                    url=page.url,
                    backup_url=audit.accessibility_statement_backup_url,
                )
                statement_page.created = None
                statement_page.save()
        if (
            audit.twelve_week_accessibility_statement_url
            or audit.audit_retest_accessibility_statement_backup_url
        ):
            twelve_week_statement_page = StatementPage.objects.create(
                audit=audit,
                url=audit.twelve_week_accessibility_statement_url,
                backup_url=audit.audit_retest_accessibility_statement_backup_url,
                added_stage="12-week-retest",
            )
            if audit.audit_retest_accessibility_statement_backup_url_date:
                twelve_week_statement_page.created = convert_date_to_datetime(
                    audit.audit_retest_accessibility_statement_backup_url_date
                )
            else:
                twelve_week_statement_page.created = None
            twelve_week_statement_page.save()


def reverse_code(apps, schema_editor):  # pylint: disable=unused-argument
    StatementPage = apps.get_model("audits", "StatementPage")
    StatementPage.objects.all().delete()


class Migration(migrations.Migration):
    dependencies = [
        ("audits", "0035_audit_audit_retest_statement_pages_complete_date_and_more"),
    ]

    operations = [
        migrations.RunPython(populate_statement_pages, reverse_code=reverse_code),
    ]
