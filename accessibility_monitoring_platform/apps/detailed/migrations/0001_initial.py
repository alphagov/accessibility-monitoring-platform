# Generated by Django 5.2.1 on 2025-06-03 07:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("cases", "0013_basecase"),
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DetailedCase",
            fields=[
                (
                    "basecase_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="cases.basecase",
                    ),
                ),
                ("previous_case_url", models.TextField(blank=True, default="")),
                ("trello_url", models.TextField(blank=True, default="")),
                ("notes", models.TextField(blank=True, default="")),
                (
                    "case_metadata_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "manage_contacts_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                ("first_contact_date", models.DateField(blank=True, null=True)),
                (
                    "first_contact_sent_to",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "request_contact_details_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "chasing_record_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                ("contact_acknowledged_date", models.DateField(blank=True, null=True)),
                (
                    "contact_acknowledged_by",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "saved_to_google_drive",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        default="no",
                        max_length=20,
                    ),
                ),
                (
                    "information_delivered_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                ("monitor_folder_url", models.TextField(blank=True, default="")),
                (
                    "initial_testing_details_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                ("initial_test_date", models.DateField(blank=True, null=True)),
                (
                    "initial_total_number_of_issues",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "initial_testing_outcome_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "initial_website_compliance_state",
                    models.CharField(
                        choices=[
                            ("compliant", "Fully compliant"),
                            ("partially-compliant", "Partially compliant"),
                            ("not-known", "Not known"),
                        ],
                        default="not-known",
                        max_length=20,
                    ),
                ),
                (
                    "initial_website_compliance_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "initial_disproportionate_burden_claim",
                    models.CharField(
                        choices=[
                            ("no-assessment", "Claim with no assessment"),
                            ("assessment", "Claim with assessment"),
                            ("no-claim", "No claim"),
                            ("no-statement", "No statement"),
                            ("not-checked", "Not checked"),
                        ],
                        default="not-checked",
                        max_length=20,
                    ),
                ),
                (
                    "initial_disproportionate_burden_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "initial_statement_compliance_state",
                    models.CharField(
                        choices=[
                            ("compliant", "Compliant"),
                            ("not-compliant", "Not compliant or no statement"),
                            ("unknown", "Not assessed"),
                        ],
                        default="unknown",
                        max_length=200,
                    ),
                ),
                (
                    "initial_statement_compliance_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                ("report_draft_url", models.TextField(blank=True, default="")),
                (
                    "report_ready_for_qa",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        default="no",
                        max_length=20,
                    ),
                ),
                ("report_draft_complete_date", models.DateField(blank=True, null=True)),
                (
                    "report_approved_status",
                    models.CharField(
                        choices=[
                            ("yes", "Yes"),
                            ("in-progress", "Further work is needed"),
                            ("not-started", "Not started"),
                        ],
                        default="not-started",
                        max_length=200,
                    ),
                ),
                ("qa_approval_complete_date", models.DateField(blank=True, null=True)),
                ("equality_body_report_url", models.TextField(blank=True, default="")),
                ("public_report_url", models.TextField(blank=True, default="")),
                (
                    "publish_report_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                ("report_sent_date", models.DateField(blank=True, null=True)),
                (
                    "report_sent_to",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                ("report_sent_complete_date", models.DateField(blank=True, null=True)),
                ("report_acknowledged_date", models.DateField(blank=True, null=True)),
                (
                    "report_acknowledged_by",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "report_acknowledged_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                ("twelve_week_deadline_date", models.DateField(blank=True, null=True)),
                (
                    "twelve_week_deadline_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                ("twelve_week_update_date", models.DateField(blank=True, null=True)),
                (
                    "twelve_week_update_to",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "twelve_week_update_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "twelve_week_acknowledged_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "twelve_week_acknowledged_by",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "twelve_week_acknowledged_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                ("retest_date", models.DateField(blank=True, null=True)),
                (
                    "retest_total_number_of_issues",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "retest_result_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "summary_of_changes_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "retest_website_compliance_state",
                    models.CharField(
                        choices=[
                            ("compliant", "Fully compliant"),
                            ("partially-compliant", "Partially compliant"),
                            ("not-known", "Not known"),
                        ],
                        default="not-known",
                        max_length=20,
                    ),
                ),
                (
                    "retest_website_compliance_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "retest_disproportionate_burden_claim",
                    models.CharField(
                        choices=[
                            ("no-assessment", "Claim with no assessment"),
                            ("assessment", "Claim with assessment"),
                            ("no-claim", "No claim"),
                            ("no-statement", "No statement"),
                            ("not-checked", "Not checked"),
                        ],
                        default="not-checked",
                        max_length=20,
                    ),
                ),
                (
                    "retest_disproportionate_burden_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "retest_statement_backup_url",
                    models.TextField(blank=True, default=""),
                ),
                (
                    "retest_statement_compliance_state",
                    models.CharField(
                        choices=[
                            ("compliant", "Compliant"),
                            ("not-compliant", "Not compliant or no statement"),
                            ("unknown", "Not assessed"),
                        ],
                        default="unknown",
                        max_length=200,
                    ),
                ),
                (
                    "retest_statement_compliance_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "number_of_days_to_retest",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "retest_metrics_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "case_close_decision_state",
                    models.CharField(
                        choices=[
                            (
                                "complete-send",
                                "Case is complete and is ready to send to the equality body",
                            ),
                            (
                                "complete-no-send",
                                "Case should not be sent to the equality body",
                            ),
                            ("no-decision", "Case still in progress"),
                        ],
                        default="no-decision",
                        max_length=30,
                    ),
                ),
                ("case_close_decision_notes", models.TextField(blank=True, default="")),
                (
                    "case_close_decision_sent_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "case_close_decision_sent_to",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "is_feedback_survey_sent",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        default="no",
                        max_length=20,
                    ),
                ),
                ("case_close_complete_date", models.DateField(blank=True, null=True)),
                ("enforcement_body_sent_date", models.DateField(blank=True, null=True)),
                (
                    "enforcement_body_started_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "enforcement_body_case_owner",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "enforcement_body_closed_case_state",
                    models.CharField(
                        choices=[
                            ("yes", "Yes"),
                            ("in-progress", "Case in progress"),
                            ("no", "No (or holding)"),
                        ],
                        default="no",
                        max_length=20,
                    ),
                ),
                (
                    "enforcement_body_completed_case_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "is_case_added_to_stats",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        default="no",
                        max_length=20,
                    ),
                ),
                (
                    "enforcement_body_metadata_complete_date",
                    models.DateField(blank=True, null=True),
                ),
            ],
            options={
                "ordering": ["-id"],
            },
            bases=("cases.basecase",),
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                ("name", models.TextField(blank=True, default="")),
                ("job_title", models.CharField(blank=True, default="", max_length=200)),
                (
                    "contact_point",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "preferred",
                    models.CharField(
                        choices=[
                            ("yes", "Yes"),
                            ("no", "No"),
                            ("unknown", "Not known"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("organisation", "Organisation"),
                            ("contractor", "Contractor"),
                        ],
                        default="organisation",
                        max_length=20,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "detailed_case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="detailed.detailedcase",
                    ),
                ),
            ],
            options={
                "ordering": ["-preferred", "-id"],
            },
        ),
        migrations.CreateModel(
            name="DetailedCaseHistory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("note", "Entered note"),
                            ("reminder", "Reminder set"),
                            ("status", "Changed status"),
                            ("contact_note", "Entered contact note"),
                        ],
                        default="note",
                        max_length=20,
                    ),
                ),
                ("value", models.TextField(blank=True, default="")),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "detailed_case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="detailed.detailedcase",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Detailed Case history",
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="EventHistory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("model_update", "Model update"),
                            ("model_create", "Model create"),
                        ],
                        default="model_update",
                        max_length=100,
                    ),
                ),
                ("difference", models.TextField(blank=True, default="")),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="detailed_case_event_content_type",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="detailed_case_event_created_by_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "detailed_case",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="detailed.detailedcase",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Event histories",
                "ordering": ["-created"],
            },
        ),
    ]
