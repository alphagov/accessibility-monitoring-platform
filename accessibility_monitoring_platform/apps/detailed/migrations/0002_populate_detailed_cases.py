# Generated by Django 5.2.1 on 2025-05-20 07:53

import csv

from django.db import migrations

from ..utils import create_detailed_case_from_dict

INPUT_FILE_NAME = "../detailed_cases.csv"


def populate_detailed_cases(apps, schema_editor):  # pylint: disable=unused-argument
    User = apps.get_model("auth", "User")
    try:
        default_user = User.objects.get(first_name="Paul")
        auditors: dict[str, User] = {
            first_name: User.objects.get(first_name=first_name)
            for first_name in ["Andrew", "Katherine", "Kelly"]
        }
    except User.DoesNotExist:  # Automated tests
        return
    DetailedEventHistory = apps.get_model("detailed", "DetailedEventHistory")
    DetailedEventHistory.objects.all().delete()
    DetailedCase = apps.get_model("detailed", "DetailedCase")
    DetailedCase.objects.all().delete()
    DetailedCaseHistory = apps.get_model("detailed", "DetailedCaseHistory")
    DetailedCaseHistory.objects.all().delete()
    try:
        with open(INPUT_FILE_NAME) as csvfile:
            reader = csv.DictReader(csvfile)
            for row in reader:
                if row["Enforcement body"] == "":
                    continue
                create_detailed_case_from_dict(
                    row=row, default_user=default_user, auditors=auditors
                )
    except FileNotFoundError:
        pass


def reverse_code(apps, schema_editor):  # pylint: disable=unused-argument
    DetailedEventHistory = apps.get_model("detailed", "DetailedEventHistory")
    DetailedEventHistory.objects.all().delete()
    DetailedCaseHistory = apps.get_model("detailed", "DetailedCaseHistory")
    DetailedCaseHistory.objects.all().delete()
    DetailedCase = apps.get_model("detailed", "DetailedCase")
    DetailedCase.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ("detailed", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(populate_detailed_cases, reverse_code=reverse_code),
    ]
