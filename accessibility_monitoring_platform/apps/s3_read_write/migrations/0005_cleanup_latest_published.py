# Generated by Django 4.1.2 on 2022-11-29 16:13

from django.db import migrations


def cleanup_latest_published(apps, schema_editor):  # pylint: disable=unused-argument
    S3Report = apps.get_model("s3_read_write", "S3Report")
    s3_reports_by_case = {}
    for s3_report in S3Report.objects.all():
        if s3_report.case_id in s3_reports_by_case:
            s3_reports_by_case[s3_report.case_id].append(s3_report)
        else:
            s3_reports_by_case[s3_report.case_id] = [s3_report]

    for s3_reports in s3_reports_by_case.values():
        s3_reports[-1].latest_published = True
        s3_reports[-1].save()


def reverse_code(apps, schema_editor):  # pylint: disable=unused-argument
    S3Report = apps.get_model("s3_read_write", "S3Report")
    for s3_report in S3Report.objects.all():
        s3_report.latest_published = False
        s3_report.save()


class Migration(migrations.Migration):

    dependencies = [
        ("s3_read_write", "0004_rename_deprecated_s3report_latest_published_and_more"),
    ]

    operations = [
        migrations.RunPython(cleanup_latest_published, reverse_code=reverse_code),
    ]
