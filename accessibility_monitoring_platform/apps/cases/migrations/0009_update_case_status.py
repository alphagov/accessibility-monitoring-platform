# Generated by Django 5.1.6 on 2025-02-21 08:25

from django.db import migrations

NEW_STATUSES = {
    "unknown": "000-unknown",
    "unassigned-case": "010-unassigned-case",
    "test-in-progress": "020-test-in-progress",
    "report-in-progress": "030-report-in-progress",
    "unassigned-qa-case": "040-unassigned-qa-case",
    "qa-in-progress": "050-qa-in-progress",
    "report-ready-to-send": "060-report-ready-to-send",
    "in-report-correspondence": "070-in-report-correspondence",
    "in-probation-period": "080-in-probation-period",
    "in-12-week-correspondence": "090-in-12-week-correspondence",
    "reviewing-changes": "100-reviewing-changes",
    "final-decision-due": "110-final-decision-due",
    "case-closed-waiting-to-be-sent": "120-case-closed-waiting-to-be-sent",
    "case-closed-sent-to-equalities-body": "130-case-closed-sent-to-equalities-body",
    "in-correspondence-with-equalities-body": "140-in-correspondence-with-equalities-body",
    "complete": "150-complete",
    "deactivated": "160-deactivated",
}


def add_case_status_prefixes(apps, schema_editor):  # pylint: disable=unused-argument
    CaseStatus = apps.get_model("cases", "CaseStatus")
    case_statuses = CaseStatus.objects.all()
    for case_status in case_statuses:
        new_status = NEW_STATUSES[case_status.status]
        case_status.status = new_status
        case_status.save()


def remove_case_status_prefixes(apps, schema_editor):  # pylint: disable=unused-argument
    CaseStatus = apps.get_model("cases", "CaseStatus")
    case_statuses = CaseStatus.objects.all()
    for case_status in case_statuses:
        new_status = case_status.status[4:]
        case_status.status = new_status
        case_status.save()


class Migration(migrations.Migration):

    dependencies = [
        ("cases", "0008_archive_pre_statement_check_cases"),
    ]

    operations = [
        migrations.RunPython(
            add_case_status_prefixes, reverse_code=remove_case_status_prefixes
        )
    ]
