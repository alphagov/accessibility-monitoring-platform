# Generated by Django 5.1.3 on 2024-12-17 15:39

from django.db import migrations

CASE_FIELD_NAMES_AND_NOTE_TYPES = [
    ("notes", "case-metadata"),  # CaseNoteHistory.NoteType.CASE_METADATA
    ("contact_notes", "manage-contacts"),  # CaseNoteHistory.NoteType.MANAGE_CONTACTS
    (
        "correspondence_notes",
        "correspondence-notes",
    ),  # CaseNoteHistory.NoteType.CORRESPONDENCE_NOTES
]


def populate_case_note_history(apps, schema_editor):  # pylint: disable=unused-argument
    Case = apps.get_model("cases", "Case")
    CaseNoteHistory = apps.get_model("cases", "CaseNoteHistory")
    for case in Case.objects.all():
        save_case = False
        for field_name, note_type in CASE_FIELD_NAMES_AND_NOTE_TYPES:
            if note := getattr(case, field_name):
                CaseNoteHistory.objects.create(
                    case=case,
                    note_type=note_type,
                    note=note,
                )
                setattr(case, field_name, "")
                save_case = True
        if save_case:
            case.save()


def reverse_code(apps, schema_editor):  # pylint: disable=unused-argument
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("cases", "0009_casenotehistory"),
    ]

    operations = [
        migrations.RunPython(populate_case_note_history, reverse_code=reverse_code),
    ]
