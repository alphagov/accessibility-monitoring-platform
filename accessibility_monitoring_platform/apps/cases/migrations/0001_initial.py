# Generated by Django 3.2.3 on 2021-06-05 05:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField()),
                ('status', models.CharField(choices=[('', 'All'), ('new-case', 'New case'), ('test-in-progress', 'Test in progress'), ('report-in-progress', 'Report in progress'), ('awaiting-response', 'Awaiting response to report'), ('12w-due', '12 Week review due'), ('12w-sent', '12 Week review sent'), ('escalated', 'Case sent to supporting bodies'), ('complete', 'Complete'), ('archived', 'Archived'), ('not-a-psb', 'Not a public sector body')], max_length=200)),
                ('auditor', models.CharField(max_length=200)),
                ('test_type', models.CharField(choices=[('simple', 'Simple'), ('detailed', 'Detailed')], default='simple', max_length=10)),
                ('home_page_url', models.TextField(default='')),
                ('domain', models.TextField(default='')),
                ('application', models.CharField(default='N/A', max_length=200)),
                ('organisation_name', models.TextField(default='')),
                ('website_type', models.CharField(choices=[('public', 'Public website'), ('int-extranet', 'Intranet/Extranet'), ('other', 'Other'), ('unknown', 'Unknown')], default='public', max_length=100)),
                ('sector', models.CharField(default='Sector', max_length=200)),
                ('region', models.CharField(default='London', max_length=200)),
                ('case_origin', models.CharField(choices=[('org', 'Organisation'), ('list', 'Website list'), ('complaint', 'Complaint')], default='org', max_length=200)),
                ('zendesk_url', models.CharField(default='', max_length=200)),
                ('trello_url', models.CharField(default='', max_length=200)),
                ('notes', models.TextField(default='')),
                ('is_public_sector_body', models.BooleanField(default=True)),
                ('test_results_url', models.CharField(default='', max_length=200)),
                ('test_status', models.CharField(choices=[('complete', 'Complete'), ('in-progress', 'In progress'), ('not-started', 'Not started')], default='not-started', max_length=200)),
                ('is_website_compliant', models.BooleanField(default=False)),
                ('test_notes', models.TextField(default='')),
                ('report_draft_url', models.CharField(default='', max_length=200)),
                ('report_review_status', models.CharField(choices=[('ready-to-review', 'Yes'), ('in-progress', 'In progress'), ('not-started', 'Not started')], default='not-started', max_length=200)),
                ('reviewer', models.CharField(default='', max_length=200)),
                ('report_approved_status', models.CharField(choices=[('yes', 'Yes'), ('no', 'Further work is needed')], default='no', max_length=200)),
                ('reviewer_notes', models.TextField(default='')),
                ('report_final_url', models.CharField(default='', max_length=200)),
                ('report_sent_date', models.DateField(null=True)),
                ('report_acknowledged_date', models.DateField(null=True)),
                ('week_12_followup_date', models.DateField(null=True)),
                ('psb_progress_notes', models.TextField(default='')),
                ('week_12_followup_email_sent_date', models.DateField(null=True)),
                ('week_12_followup_email_acknowledgement_date', models.DateField(null=True)),
                ('is_website_retested', models.BooleanField(default=False)),
                ('is_disproportionate_claimed', models.BooleanField(default=False)),
                ('disproportionate_notes', models.TextField(default='')),
                ('accessibility_statement_decison', models.CharField(choices=[('compliant', 'Compliant'), ('partially', 'Partially compliant'), ('not-compliant', 'Not compliant'), ('other', 'Other')], default='not-compliant', max_length=200)),
                ('accessibility_statement_url', models.CharField(default='', max_length=200)),
                ('accessibility_statement_notes', models.TextField(default='')),
                ('compliance_decision', models.CharField(choices=[('inaction', 'No further action'), ('other', 'Other'), ('unknown', 'Unknown')], default='unknown', max_length=200)),
                ('compliance_decision_notes', models.TextField(default='')),
                ('compliance_email_sent_date', models.DateField(null=True)),
                ('sent_to_enforcement_body_sent_date', models.DateField(null=True)),
                ('is_case_completed', models.BooleanField(default=False)),
                ('completed', models.DateTimeField(null=True)),
                ('archived', models.BooleanField(default=False)),
                ('simplified_test_filename', models.CharField(max_length=200)),
                ('created_by', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default='', max_length=200)),
                ('last_name', models.CharField(default='', max_length=200)),
                ('job_title', models.CharField(default='', max_length=200)),
                ('detail', models.CharField(default='', max_length=200)),
                ('preferred', models.BooleanField(default=False)),
                ('notes', models.TextField(default='')),
                ('created', models.DateTimeField()),
                ('created_by', models.CharField(max_length=200)),
                ('archived', models.BooleanField(default=False)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cases.case')),
            ],
        ),
    ]
