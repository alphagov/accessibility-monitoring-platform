# Generated by Django 5.2.1 on 2025-06-03 07:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("cases", "0013_basecase"),
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SimplifiedCase",
            fields=[
                (
                    "basecase_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="cases.basecase",
                    ),
                ),
                (
                    "case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        blank=True,
                        null=True,
                        to="cases.case",
                    ),
                ),
                ("archive", models.TextField(blank=True, default="")),
                (
                    "variant",
                    models.CharField(
                        choices=[
                            ("close-case", "Equality Body Close Case"),
                            ("statement-content", "Statement content yes/no"),
                            ("reporting", "Platform reports"),
                            ("archived", "Archived"),
                        ],
                        default="close-case",
                        max_length=20,
                    ),
                ),
                ("previous_case_url", models.TextField(blank=True, default="")),
                ("trello_url", models.TextField(blank=True, default="")),
                ("notes", models.TextField(blank=True, default="")),
                ("test_results_url", models.TextField(blank=True, default="")),
                (
                    "testing_details_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                ("report_draft_url", models.TextField(blank=True, default="")),
                ("report_notes", models.TextField(blank=True, default="")),
                (
                    "report_review_status",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        default="no",
                        max_length=200,
                    ),
                ),
                (
                    "reporting_details_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                ("reviewer_notes", models.TextField(blank=True, default="")),
                ("report_final_pdf_url", models.TextField(blank=True, default="")),
                ("report_final_odt_url", models.TextField(blank=True, default="")),
                ("qa_process_complete_date", models.DateField(blank=True, null=True)),
                ("qa_auditor_complete_date", models.DateField(blank=True, null=True)),
                (
                    "report_approved_status",
                    models.CharField(
                        choices=[
                            ("yes", "Yes"),
                            ("in-progress", "Further work is needed"),
                            ("not-started", "Not started"),
                        ],
                        default="not-started",
                        max_length=200,
                    ),
                ),
                ("qa_approval_complete_date", models.DateField(blank=True, null=True)),
                (
                    "publish_report_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                ("zendesk_url", models.TextField(blank=True, default="")),
                (
                    "cores_overview_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                ("contact_notes", models.TextField(blank=True, default="")),
                (
                    "manage_contact_details_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "contact_details_found",
                    models.CharField(
                        choices=[
                            ("found", "Contact details found"),
                            ("not-found", "No contact details found"),
                            ("not-checked", "Not checked"),
                        ],
                        default="not-checked",
                        max_length=20,
                    ),
                ),
                ("enable_correspondence_process", models.BooleanField(default=False)),
                (
                    "seven_day_no_contact_email_sent_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "seven_day_no_contact_request_sent_to",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "request_contact_details_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "no_contact_one_week_chaser_due_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "no_contact_one_week_chaser_sent_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "no_contact_one_week_chaser_sent_to",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "one_week_contact_details_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "no_contact_four_week_chaser_due_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "no_contact_four_week_chaser_sent_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "no_contact_four_week_chaser_sent_to",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                ("correspondence_notes", models.TextField(blank=True, default="")),
                (
                    "four_week_contact_details_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "no_psb_contact",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        default="no",
                        max_length=20,
                    ),
                ),
                ("no_psb_contact_notes", models.TextField(blank=True, default="")),
                (
                    "no_psb_contact_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                ("report_sent_date", models.DateField(blank=True, null=True)),
                (
                    "report_sent_to_email",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "report_sent_on_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "report_followup_week_1_sent_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "report_followup_week_1_due_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "one_week_followup_sent_to_email",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "one_week_followup_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "report_followup_week_4_sent_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "report_followup_week_4_due_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "four_week_followup_sent_to_email",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "four_week_followup_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                ("report_acknowledged_date", models.DateField(blank=True, null=True)),
                (
                    "report_acknowledged_by_email",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "report_acknowledged_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "twelve_week_update_requested_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "report_followup_week_12_due_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "twelve_week_update_request_sent_to_email",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "twelve_week_correspondence_notes",
                    models.TextField(blank=True, default=""),
                ),
                (
                    "twelve_week_update_requested_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "twelve_week_1_week_chaser_sent_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "twelve_week_1_week_chaser_due_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "twelve_week_1_week_chaser_sent_to_email",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "one_week_followup_final_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "twelve_week_correspondence_acknowledged_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "twelve_week_correspondence_acknowledged_by_email",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "twelve_week_response_state",
                    models.CharField(
                        choices=[
                            ("yes", "Yes"),
                            ("no", "No"),
                            ("not-selected", "Not selected"),
                        ],
                        default="not-selected",
                        max_length=20,
                    ),
                ),
                (
                    "organisation_response",
                    models.CharField(
                        choices=[
                            (
                                "no-response",
                                "Organisation did not respond to 12-week update",
                            ),
                            (
                                "not-applicable",
                                "Not applicable or organisation responded to 12-week update",
                            ),
                        ],
                        default="not-applicable",
                        max_length=20,
                    ),
                ),
                (
                    "twelve_week_update_request_ack_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "report_correspondence_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "twelve_week_correspondence_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "twelve_week_retest_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                ("psb_progress_notes", models.TextField(blank=True, default="")),
                ("retested_website_date", models.DateField(blank=True, null=True)),
                (
                    "is_ready_for_final_decision",
                    models.CharField(
                        choices=[("yes", "Yes"), ("no", "No")],
                        default="no",
                        max_length=20,
                    ),
                ),
                (
                    "review_changes_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "final_website_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "is_disproportionate_claimed",
                    models.CharField(
                        choices=[
                            ("yes", "Yes"),
                            ("no", "No"),
                            ("unknown", "Not known"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                ("disproportionate_notes", models.TextField(blank=True, default="")),
                (
                    "accessibility_statement_screenshot_url",
                    models.TextField(blank=True, default=""),
                ),
                (
                    "final_statement_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                ("compliance_email_sent_date", models.DateField(blank=True, null=True)),
                (
                    "compliance_decision_sent_to_email",
                    models.CharField(blank=True, default="", max_length=200),
                ),
                (
                    "recommendation_for_enforcement",
                    models.CharField(
                        choices=[
                            ("no-further-action", "No further action"),
                            ("other", "For enforcement consideration"),
                            ("unknown", "Not selected"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                ("recommendation_notes", models.TextField(blank=True, default="")),
                (
                    "enforcement_recommendation_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "case_completed",
                    models.CharField(
                        choices=[
                            (
                                "complete-send",
                                "Case is complete and is ready to send to the equality body",
                            ),
                            (
                                "complete-no-send",
                                "Case should not be sent to the equality body",
                            ),
                            ("no-decision", "Case still in progress"),
                        ],
                        default="no-decision",
                        max_length=30,
                    ),
                ),
                ("completed_date", models.DateTimeField(blank=True, null=True)),
                ("case_close_complete_date", models.DateField(blank=True, null=True)),
                ("psb_appeal_notes", models.TextField(blank=True, default="")),
                ("post_case_notes", models.TextField(blank=True, default="")),
                ("post_case_complete_date", models.DateField(blank=True, null=True)),
                ("case_updated_date", models.DateField(blank=True, null=True)),
                (
                    "enforcement_body_pursuing",
                    models.CharField(
                        choices=[
                            ("yes-completed", "Yes, completed"),
                            ("yes-in-progress", "Yes, in progress"),
                            ("no", "No"),
                        ],
                        default="no",
                        max_length=20,
                    ),
                ),
                (
                    "enforcement_body_correspondence_notes",
                    models.TextField(blank=True, default=""),
                ),
                (
                    "enforcement_retest_document_url",
                    models.TextField(blank=True, default=""),
                ),
                (
                    "enforcement_correspondence_complete_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "sent_to_enforcement_body_sent_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "equality_body_case_start_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "enforcement_body_case_owner",
                    models.TextField(blank=True, default=""),
                ),
                (
                    "enforcement_body_closed_case",
                    models.CharField(
                        choices=[
                            ("yes", "Yes"),
                            ("in-progress", "Case in progress"),
                            ("no", "No (or holding)"),
                        ],
                        default="no",
                        max_length=20,
                    ),
                ),
                (
                    "enforcement_body_finished_date",
                    models.DateField(blank=True, null=True),
                ),
                ("equality_body_notes", models.TextField(blank=True, default="")),
                ("is_deactivated", models.BooleanField(default=False)),
                ("deactivate_date", models.DateField(blank=True, null=True)),
                ("deactivate_notes", models.TextField(blank=True, default="")),
                (
                    "qa_status",
                    models.CharField(
                        choices=[
                            ("unknown", "Unknown"),
                            ("unassigned-qa-case", "Unassigned QA case"),
                            ("in-qa", "In QA"),
                            ("qa-approved", "QA approved"),
                        ],
                        default="unknown",
                        max_length=200,
                    ),
                ),
            ],
            options={
                "ordering": ["-id"],
            },
            bases=("cases.basecase",),
        ),
        migrations.CreateModel(
            name="EqualityBodyCorrespondence",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_within_case", models.IntegerField(blank=True, default=1)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("question", "Question"),
                            ("retest", "Retest request"),
                        ],
                        default="question",
                        max_length=20,
                    ),
                ),
                ("message", models.TextField(blank=True, default="")),
                ("notes", models.TextField(blank=True, default="")),
                ("zendesk_url", models.TextField(blank=True, default="")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("outstanding", "Unresolved"),
                            ("resolved", "Resolved"),
                        ],
                        default="outstanding",
                        max_length=20,
                    ),
                ),
                ("created", models.DateTimeField()),
                ("updated", models.DateTimeField()),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="simplified.simplifiedcase",
                    ),
                ),
            ],
            options={
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                ("name", models.TextField(blank=True, default="")),
                ("job_title", models.CharField(blank=True, default="", max_length=200)),
                ("email", models.CharField(blank=True, default="", max_length=200)),
                (
                    "preferred",
                    models.CharField(
                        choices=[
                            ("yes", "Yes"),
                            ("no", "No"),
                            ("unknown", "Not known"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                ("created", models.DateTimeField()),
                ("updated", models.DateTimeField(blank=True, null=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="simplified.simplifiedcase",
                    ),
                ),
            ],
            options={
                "ordering": ["-preferred", "-id"],
            },
        ),
        migrations.CreateModel(
            name="CaseStatus",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("unknown", "Unknown"),
                            ("unassigned-case", "Unassigned case"),
                            ("test-in-progress", "Test in progress"),
                            ("report-in-progress", "Report in progress"),
                            ("unassigned-qa-case", "Report ready to QA"),
                            ("qa-in-progress", "QA in progress"),
                            ("report-ready-to-send", "Report ready to send"),
                            ("in-report-correspondence", "Report sent"),
                            (
                                "in-probation-period",
                                "Report acknowledged waiting for 12-week deadline",
                            ),
                            (
                                "in-12-week-correspondence",
                                "After 12-week correspondence",
                            ),
                            ("reviewing-changes", "Reviewing changes"),
                            ("final-decision-due", "Final decision due"),
                            (
                                "case-closed-waiting-to-be-sent",
                                "Case closed and waiting to be sent to equalities body",
                            ),
                            (
                                "case-closed-sent-to-equalities-body",
                                "Case closed and sent to equalities body",
                            ),
                            (
                                "in-correspondence-with-equalities-body",
                                "In correspondence with equalities body",
                            ),
                            ("complete", "Complete"),
                            ("deactivated", "Deactivated"),
                        ],
                        default="unassigned-case",
                        max_length=200,
                    ),
                ),
                (
                    "case",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="simplified.simplifiedcase",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Case statuses",
            },
        ),
        migrations.CreateModel(
            name="CaseEvent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("create", "Create"),
                            ("auditor", "Change of auditor"),
                            ("create_audit", "Start test"),
                            ("create_report", "Create report"),
                            ("ready_for_qa", "Report readiness for QA"),
                            ("qa_auditor", "Change of QA auditor"),
                            ("approve_report", "Report approval"),
                            ("retest", "Start retest"),
                            ("read_for_final_decision", "Ready for final decision"),
                            ("completed", "Completed"),
                        ],
                        default="create",
                        max_length=100,
                    ),
                ),
                ("message", models.TextField(blank=True, default="Created case")),
                ("event_time", models.DateTimeField(auto_now_add=True)),
                (
                    "done_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="simplified.simplifiedcase",
                    ),
                ),
            ],
            options={
                "ordering": ["event_time"],
            },
        ),
        migrations.CreateModel(
            name="CaseCompliance",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version", models.IntegerField(default=0)),
                (
                    "website_compliance_state_initial",
                    models.CharField(
                        choices=[
                            ("compliant", "Fully compliant"),
                            ("partially-compliant", "Partially compliant"),
                            ("not-known", "Not known"),
                        ],
                        default="not-known",
                        max_length=20,
                    ),
                ),
                (
                    "website_compliance_notes_initial",
                    models.TextField(blank=True, default=""),
                ),
                (
                    "statement_compliance_state_initial",
                    models.CharField(
                        choices=[
                            ("compliant", "Compliant"),
                            ("not-compliant", "Not compliant or no statement"),
                            ("unknown", "Not assessed"),
                        ],
                        default="unknown",
                        max_length=200,
                    ),
                ),
                (
                    "statement_compliance_notes_initial",
                    models.TextField(blank=True, default=""),
                ),
                (
                    "website_compliance_state_12_week",
                    models.CharField(
                        choices=[
                            ("compliant", "Fully compliant"),
                            ("partially-compliant", "Partially compliant"),
                            ("not-known", "Not known"),
                        ],
                        default="not-known",
                        max_length=200,
                    ),
                ),
                (
                    "website_compliance_notes_12_week",
                    models.TextField(blank=True, default=""),
                ),
                (
                    "statement_compliance_state_12_week",
                    models.CharField(
                        choices=[
                            ("compliant", "Compliant"),
                            ("not-compliant", "Not compliant or no statement"),
                            ("unknown", "Not assessed"),
                        ],
                        default="unknown",
                        max_length=200,
                    ),
                ),
                (
                    "statement_compliance_notes_12_week",
                    models.TextField(blank=True, default=""),
                ),
                (
                    "case",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="compliance",
                        to="simplified.simplifiedcase",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SimplifiedEventHistory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("model_update", "Model update"),
                            ("model_create", "Model create"),
                        ],
                        default="model_update",
                        max_length=100,
                    ),
                ),
                ("difference", models.TextField(blank=True, default="")),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "case",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="simplified.simplifiedcase",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Event histories",
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="ZendeskTicket",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_within_case", models.IntegerField(blank=True, default=1)),
                ("url", models.TextField(blank=True, default="")),
                ("summary", models.TextField(blank=True, default="")),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "case",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="simplified.simplifiedcase",
                    ),
                ),
            ],
            options={
                "ordering": ["-id"],
            },
        ),
    ]
